#!/usr/bin/make -f
# Made with the aid of debmake, by Christoph Lameter,
# based on the sample debian/rules file for GNU hello by Ian Jackson.

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS
 
package=mapserver

version=$(shell expr `pwd` : '.*-\([0-9.]*\)')
version_major=$(shell expr `pwd` : '.*-\([0-9]*\).[0-9.]*')
CURDIR := $(shell pwd)
PYVERS=$(shell pyversions -r debian/control)
RUBYVERS=1.8 1.9.1
PHP5API=$(shell php-config5 --phpapi)

# Configure config :
# Not using non free libpdf
# Explicit disable direct goetiff support, 
# it's better to use gdal geotiff support for stability reasons


COMMON_CONFIG=	--prefix=/usr \
		--without-tiff \
		--without-pdf \
		--with-gd=/usr \
		--with-freetype=/usr \
		--with-fribidi-config \
		--with-zlib=/usr \
		--with-xpm=/usr \
		--with-gdal \
		--with-ogr \
		--with-proj \
		--with-eppl \
		--with-postgis \
		--with-wcs \
		--with-sos \
		--with-wms \
		--with-wmsclient \
		--with-wfs \
		--with-wfsclient \
		--with-threads \
		--with-geos \
		--with-fastcgi \
		--with-agg \
		--with-php \
		--with-cairo

rstoptions=--stylesheet=mapscript.css --link-stylesheet 

MS_CFLAGS=-O2
MS_CXXFLAGS=$(MS_CFLAGS)

configure-stamp:
	dh_testdir
	./configure $(COMMON_CONFIG) CFLAGS="$(MS_CFLAGS)" CXXFLAGS="$(MS_CXXFLAGS)"

	touch configure-stamp

# This is the correct, policy-compliant build target
#build: build-indep build-arch

# This is the incorrect, non-policy compliant build target
# it is nessecary because the auto-builders use build, but don't install Build-Depends-Indep
build: build-arch

build-indep: build-indep-stamp
build-indep-stamp:
	dh_testdir
	touch build-indep-stamp

build-arch: build-arch-stamp
build-arch-stamp: configure-stamp
	dh_testdir

	# Build binary lib
	$(MAKE) mapscriptvars || touch mapscriptvars
	$(MAKE)  

	# Build Perl mapscript
	cd $(CURDIR)/mapscript/perl && \
	  perl Makefile.PL INSTALLDIRS=vendor \
	  && $(MAKE) LD_RUN_PATH="" OPTIMIZE="-O2 -g -W -Wall"

	# Build python
	cd $(CURDIR)/mapscript/python && \
	  set -e; for python in $(PYVERS); do $$python setup.py build; done

	# Build ruby
	cd $(CURDIR)/mapscript/ruby && set -e ; \
	  for v in $(RUBYVERS) ; do \
	    ruby$$v extconf.rb && $(MAKE) && \
	      mv mapscript.so ruby$$v-mapscript.so ; \
	  done

	touch build-arch-stamp


# This is needed to do 'make clean', but will be removed by the clean
# targets.  The end result is that 'debuild clean' only can execute
# once.  Hack around this problem by faking the creation when make fail.

clean-first-build:
	dh_testdir

	-$(RM) configure-stamp build-arch-stamp build-indep-stamp

	-$(RM) tile4ms
	[ ! -f $(CURDIR)/Makefile ] || $(MAKE) mapscriptvars 
	touch mapscriptvars
	[ ! -f $(CURDIR)/mapscript/perl/Makefile ] || $(MAKE) distclean -C $(CURDIR)/mapscript/perl
	-$(RM) mapscript/perl/Makefile.PL
	-cd mapscript/python && \
	  for python in $(PYVERS); do $$python setup.py clean; done
	-$(RM) -rf mapscript/python/build mapscript/python/Makefile
	[ ! -f $(CURDIR)/mapscript/ruby/Makefile ] || $(MAKE) distclean -C $(CURDIR)/mapscript/ruby
	-$(RM) -rf $(CURDIR)/mapscript/ruby/mapscript_wrap.c
	-$(RM) mapscriptvars libtool

	-$(RM)  mapscript/perl/mapscript.i \
		mapscript/tcl/mapscript.i \
		mapscript/python/mapscript.i

	[ ! -f $(CURDIR)/Makefile ] || $(MAKE) distclean

	# Remove some generated files 
	-$(RM) Makefile mapscript/java/Makefile
	-$(RM) mapscript/csharp/Makefile mapscript/php/Makefile
	-$(RM) config.log config.status

	-$(RM) debian/.#* .#*

clean: clean-first-build
	dh_testdir
	dh_prep
	-$(RM) install-arch-stamp install-indep-stamp
	-$(RM) -rf $(CURDIR)/debian/files
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -f debian/*.debhelper.log

install-indep: install-indep-stamp
install-indep-stamp: build-indep
	dh_testdir -i
	dh_testroot -i
	dh_installdirs -i
	dh_install -i
	touch install-indep-stamp

install-arch: install-arch-stamp
install-arch-stamp: build-arch
	dh_testdir -a
	dh_testroot -a
	dh_installdirs -a
	dh_auto_install

	# Perl mapscript
	cd $(CURDIR)/mapscript/perl && \
        $(MAKE) install DESTDIR=$(CURDIR)/debian/libmapscript-perl

	# Python mapscript
	cd $(CURDIR)/mapscript/python && set -e ; \
	  for python in $(PYVERS); do \
	    $$python setup.py install --root=$(CURDIR)/debian/python-mapscript ; \
	  done

	# Ruby mapscript
	cd $(CURDIR)/mapscript/ruby && set -e ; \
	  for v in $(RUBYVERS) ; do \
	    ruby$$v extconf.rb ; \
	      $(MAKE) install sitedir=$(CURDIR)/debian/libmapscript-ruby$$v/usr/lib/ruby ; \
	      $(MAKE) distclean ; \
	  done

	# removing embedded rpath in binaries
	-find $(CURDIR)/debian/tmp/usr/bin -type f -not -name mapserver-config -exec chrpath --delete {} \;

	# removing embedded rpath in libraries
	-find $(CURDIR)/debian/python-mapscript/usr/ -name _mapscript.so -type f -exec chrpath --delete {} \;
	-find $(CURDIR)/debian/libmapscript-ruby*/usr/lib/ruby/ -type f -exec chrpath --delete {} \;

	# remove la file in php ext dir
	-$(RM) -rf $(CURDIR)/debian/tmp/usr/lib/php5/$(PHP5API)/*.la

	# empty dependency_libs in la file
	sed -i "/dependency_libs/ s/'.*'/''/" $(CURDIR)/debian/tmp/usr/lib/libmapserver.la

	# CGI mapserver
	-mkdir -p debian/tmp/usr/lib/cgi-bin
	install -m755 debian/tmp/usr/bin/mapserv debian/tmp/usr/lib/cgi-bin/mapserv

	echo 'misc:Depends=phpapi-'$(PHP5API) >> debian/php5-mapscript.substvars

	# libmapserver-dev headers
	-mkdir -p debian/tmp/usr/include/mapserver/
	install -m755 *.h debian/tmp/usr/include/mapserver/

	touch install-arch-stamp

binary-indep: install-indep
	dh_testdir -i
	dh_testroot -i
	dh_installchangelogs -i HISTORY.TXT
	dh_installdocs -i
	dh_installexamples -i
	dh_installdebconf -i
	dh_compress -i -X.xml -X.xsd -X.xsl
	dh_link -i
	dh_lintian -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

binary-arch: install-arch
	dh_testdir -a
	dh_testroot -a
	dh_install --autodest --list-missing 
	dh_installchangelogs -a HISTORY.TXT
	dh_installdocs -a
	dh_installexamples -a
	chmod a-x debian/php*-mapscript/usr/share/doc/php*-mapscript/examples/*.phtml
	dh_installdebconf -a
	dh_python2 -ppython-mapscript
	dh_compress -a
	dh_link -a
	dh_lintian -a
	dh_strip -a
	dh_fixperms -a
	dh_makeshlibs -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_perl -plibmapscript-perl
	dh_perl -pmapserver-bin
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch

.PHONY: build build-arch build-indep clean binary-indep binary-arch binary install install-indep install-arch

