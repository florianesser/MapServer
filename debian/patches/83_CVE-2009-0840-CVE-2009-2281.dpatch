#! /bin/sh /usr/share/dpatch/dpatch-run
## 83_CVE-2009-0840-CVE-2009-2281.dpatch by Alan Boudreault <aboudreault@mapgears.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad mapserver-4.10.0~/cgiutil.c mapserver-4.10.0/cgiutil.c
--- mapserver-4.10.0~/cgiutil.c	2006-08-28 21:56:53.000000000 -0400
+++ mapserver-4.10.0/cgiutil.c	2009-07-14 13:08:18.430607176 -0400
@@ -69,7 +69,8 @@
 static char *readPostBody( cgiRequestObj *request ) 
 {
     char *data; 
-    int data_max, data_len, chunk_size;
+    size_t data_max, data_len;
+    int chunk_size;
 
     msIO_needBinaryStdin();
     
@@ -79,12 +80,19 @@
     if( getenv("CONTENT_LENGTH") != NULL )
     {
 
-        data_max = atoi(getenv("CONTENT_LENGTH"));
+        data_max = (size_t) atoi(getenv("CONTENT_LENGTH"));
+        /* Test for suspicious CONTENT_LENGTH (negative value or SIZE_MAX) */
+        if( data_max >= SIZE_MAX ) 
+        {
+            msIO_printf("Content-type: text/html%c%c",10,10);
+            msIO_printf("Suspicious Content-Length.\n");
+            exit( 1 );
+        }
         data = (char *) malloc(data_max+1);
         if( data == NULL )
         {
             msIO_printf("Content-type: text/html%c%c",10,10);
-            msIO_printf("malloc() failed, Content-Length: %d unreasonably large?\n",
+            msIO_printf("malloc() failed, Content-Length: %u unreasonably large?\n",
                    data_max );
             exit( 1 );
         }
@@ -101,7 +109,9 @@
 /* -------------------------------------------------------------------- */
 /*      Otherwise read in chunks to the end.                            */
 /* -------------------------------------------------------------------- */
-    data_max = 10000;
+#define DATA_ALLOC_SIZE 10000
+
+    data_max = DATA_ALLOC_SIZE;
     data_len = 0;
     data = (char *) malloc(data_max+1);
 
@@ -112,13 +122,21 @@
 
         if( data_len == data_max )
         {
-            data_max = data_max + 10000;
+            /* Realloc buffer, making sure we check for possible size_t overflow */
+            if ( data_max > SIZE_MAX - (DATA_ALLOC_SIZE+1) ) 
+            {
+                msIO_printf("Content-type: text/html%c%c",10,10);
+                msIO_printf("Possible size_t overflow, cannot reallocate input buffer, POST body too large?\n" );
+                exit(1);
+            }
+
+            data_max = data_max + DATA_ALLOC_SIZE;
             data = (char *) realloc(data, data_max+1);
 
             if( data == NULL )
             {
                 msIO_printf("Content-type: text/html%c%c",10,10);
-                msIO_printf("out of memory trying to allocate %d input buffer, POST body too large?\n", data_max+1 );
+                msIO_printf("out of memory trying to allocate %u input buffer, POST body too large?\n", data_max+1 );
                 exit(1);
             }
         }
diff -urNad mapserver-4.10.0~/map.h mapserver-4.10.0/map.h
--- mapserver-4.10.0~/map.h	2006-10-04 10:54:49.000000000 -0400
+++ mapserver-4.10.0/map.h	2009-07-14 13:08:18.430607176 -0400
@@ -153,6 +153,7 @@
 #include <malloc.h>
 #else
 #include <unistd.h>
+#include <stdint.h>
 #endif
 
 #ifndef DISABLE_CVSID
