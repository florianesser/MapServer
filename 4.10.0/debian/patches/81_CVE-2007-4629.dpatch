#! /bin/sh /usr/share/dpatch/dpatch-run
## 81_CVE-2007-4629.dpatch by Devin Carraway <devin@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Upstream patch for CVE-2007-4629, fixing buffer overflows
## DP: in template handlers.


@DPATCH@
Index: /branches/branch-4-10/mapserver/HISTORY.TXT
===================================================================
--- mapserver/maptemplate.c (revision 6043)
+++ mapserver/maptemplate.c (revision 6668)
@@ -2602,26 +2602,26 @@
     if(isOn(msObj, msObj->Map->layers[i].name, msObj->Map->layers[i].group) == MS_TRUE) {
       if(msObj->Map->layers[i].group) {
-        sprintf(substr, "[%s_select]", msObj->Map->layers[i].group);
+        snprintf(substr, PROCESSLINE_BUFLEN, "[%s_select]", msObj->Map->layers[i].group);
         outstr = gsub(outstr, substr, "selected=\"selected\"");
-        sprintf(substr, "[%s_check]", msObj->Map->layers[i].group);
+        snprintf(substr, PROCESSLINE_BUFLEN, "[%s_check]", msObj->Map->layers[i].group);
         outstr = gsub(outstr, substr, "checked=\"checked\"");
       }
       if(msObj->Map->layers[i].name) {
-        sprintf(substr, "[%s_select]", msObj->Map->layers[i].name);
+        snprintf(substr, PROCESSLINE_BUFLEN, "[%s_select]", msObj->Map->layers[i].name);
         outstr = gsub(outstr, substr, "selected=\"selected\"");
-        sprintf(substr, "[%s_check]", msObj->Map->layers[i].name);
+        snprintf(substr, PROCESSLINE_BUFLEN, "[%s_check]", msObj->Map->layers[i].name);
         outstr = gsub(outstr, substr, "checked=\"checked\"");
       }
     } else {
       if(msObj->Map->layers[i].group) {
-        sprintf(substr, "[%s_select]", msObj->Map->layers[i].group);
+        snprintf(substr, PROCESSLINE_BUFLEN, "[%s_select]", msObj->Map->layers[i].group);
         outstr = gsub(outstr, substr, "");
-        sprintf(substr, "[%s_check]", msObj->Map->layers[i].group);
+        snprintf(substr, PROCESSLINE_BUFLEN, "[%s_check]", msObj->Map->layers[i].group);
         outstr = gsub(outstr, substr, "");
       }
       if(msObj->Map->layers[i].name) {
-        sprintf(substr, "[%s_select]", msObj->Map->layers[i].name);
+        snprintf(substr, PROCESSLINE_BUFLEN, "[%s_select]", msObj->Map->layers[i].name);
         outstr = gsub(outstr, substr, "");
-        sprintf(substr, "[%s_check]", msObj->Map->layers[i].name);
+        snprintf(substr, PROCESSLINE_BUFLEN, "[%s_check]", msObj->Map->layers[i].name);
         outstr = gsub(outstr, substr, "");
       }
@@ -2667,7 +2667,7 @@
       if (msObj->Map->web.metadata.items[j] != NULL) {
         for(tp=msObj->Map->web.metadata.items[j]; tp!=NULL; tp=tp->next) {
-          sprintf(substr, "[web_%s]", tp->key);
+          snprintf(substr, PROCESSLINE_BUFLEN, "[web_%s]", tp->key);
           outstr = gsub(outstr, substr, tp->data);  
-          sprintf(substr, "[web_%s_esc]", tp->key);
+          snprintf(substr, PROCESSLINE_BUFLEN, "[web_%s_esc]", tp->key);
 
           encodedstr = msEncodeUrl(tp->data);
@@ -2685,10 +2685,10 @@
         if(msObj->Map->layers[i].metadata.items[j] != NULL) {
           for(tp=msObj->Map->layers[i].metadata.items[j]; tp!=NULL; tp=tp->next) {
-            sprintf(substr, "[%s_%s]", msObj->Map->layers[i].name, tp->key);
+            snprintf(substr, PROCESSLINE_BUFLEN, "[%s_%s]", msObj->Map->layers[i].name, tp->key);
             if(msObj->Map->layers[i].status == MS_ON)
               outstr = gsub(outstr, substr, tp->data);
             else
               outstr = gsub(outstr, substr, "");
-            sprintf(substr, "[%s_%s_esc]", msObj->Map->layers[i].name, tp->key);
+            snprintf(substr, PROCESSLINE_BUFLEN, "[%s_%s_esc]", msObj->Map->layers[i].name, tp->key);
             if(msObj->Map->layers[i].status == MS_ON) {
               encodedstr = msEncodeUrl(tp->data);
@@ -2848,8 +2848,8 @@
         if(msObj->ResultLayer->metadata.items[i] != NULL) {
           for(tp=msObj->ResultLayer->metadata.items[i]; tp!=NULL; tp=tp->next) {
-            sprintf(substr, "[metadata_%s]", tp->key);
+            snprintf(substr, PROCESSLINE_BUFLEN, "[metadata_%s]", tp->key);
             outstr = gsub(outstr, substr, tp->data);
      
-            sprintf(substr, "[metadata_%s_esc]", tp->key);
+            snprintf(substr, PROCESSLINE_BUFLEN, "[metadata_%s_esc]", tp->key);
             encodedstr = msEncodeUrl(tp->data);
             outstr = gsub(outstr, substr, encodedstr);
@@ -2905,5 +2905,5 @@
     for(i=0;i<msObj->ResultLayer->numitems;i++) {
       /* by default let's encode attributes for HTML presentation */
-      sprintf(substr, "[%s]", msObj->ResultLayer->items[i]);
+      snprintf(substr, PROCESSLINE_BUFLEN, "[%s]", msObj->ResultLayer->items[i]);
       if(strstr(outstr, substr) != NULL) {
         encodedstr = msEncodeHTMLEntities(msObj->ResultShape.values[i]);
@@ -2913,5 +2913,5 @@
 
       /* of course you might want to embed that data in URLs */
-      sprintf(substr, "[%s_esc]", msObj->ResultLayer->items[i]);
+      snprintf(substr, PROCESSLINE_BUFLEN, "[%s_esc]", msObj->ResultLayer->items[i]);
       if(strstr(outstr, substr) != NULL) {
         encodedstr = msEncodeUrl(msObj->ResultShape.values[i]);
@@ -2921,5 +2921,5 @@
 
       /* or you might want to access the attributes unaltered */
-      sprintf(substr, "[%s_raw]", msObj->ResultLayer->items[i]);
+      snprintf(substr, PROCESSLINE_BUFLEN, "[%s_raw]", msObj->ResultLayer->items[i]);
       if(strstr(outstr, substr) != NULL)
         outstr = gsub(outstr, substr, msObj->ResultShape.values[i]);
@@ -2934,5 +2934,5 @@
         for(j=0;j<msObj->ResultLayer->joins[i].numitems;j++) {
           /* by default let's encode attributes for HTML presentation */
-          sprintf(substr, "[%s_%s]", msObj->ResultLayer->joins[i].name, msObj->ResultLayer->joins[i].items[j]);        
+          snprintf(substr, PROCESSLINE_BUFLEN, "[%s_%s]", msObj->ResultLayer->joins[i].name, msObj->ResultLayer->joins[i].items[j]);        
           if(strstr(outstr, substr) != NULL) {
             encodedstr = msEncodeHTMLEntities(msObj->ResultLayer->joins[i].values[j]);
@@ -2942,5 +2942,5 @@
 
           /* of course you might want to embed that data in URLs */
-          sprintf(substr, "[%s_%s_esc]", msObj->ResultLayer->joins[i].name, msObj->ResultLayer->joins[i].items[j]);
+          snprintf(substr, PROCESSLINE_BUFLEN, "[%s_%s_esc]", msObj->ResultLayer->joins[i].name, msObj->ResultLayer->joins[i].items[j]);
           if(strstr(outstr, substr) != NULL) {
             encodedstr = msEncodeUrl(msObj->ResultLayer->joins[i].values[j]);
@@ -2950,5 +2950,5 @@
 
           /* or you might want to access the attributes unaltered */
-          sprintf(substr, "[%s_%s_raw]", msObj->ResultLayer->joins[i].name, msObj->ResultLayer->joins[i].items[j]);
+          snprintf(substr, PROCESSLINE_BUFLEN, "[%s_%s_raw]", msObj->ResultLayer->joins[i].name, msObj->ResultLayer->joins[i].items[j]);
           if(strstr(outstr, substr) != NULL)
             outstr = gsub(outstr, substr, msObj->ResultLayer->joins[i].values[j]);
@@ -2957,5 +2957,5 @@
         char *joinTemplate=NULL;
 
-        sprintf(substr, "[join_%s]", msObj->ResultLayer->joins[i].name);        
+        snprintf(substr, PROCESSLINE_BUFLEN, "[join_%s]", msObj->ResultLayer->joins[i].name);        
         if(strstr(outstr, substr) != NULL) {
           joinTemplate = processOneToManyJoin(msObj, &(msObj->ResultLayer->joins[i]));
